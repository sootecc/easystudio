===================================================================

[15단계] 메뉴에 슬라이드 다운 기능 구현하기 : javascript 폴더 생성 후 그 안에 jquery-1.12.3.js 파일을 넣어주고,
                                                         script.js 파일은 새로 만들어서 그 안에 다음의 소스 내용을 코딩해 줍니다.

[script.js 파일에 Slide Down 기능이 동작하도록 하기 위한 소스 코딩을 추가해 줌]

// document.ready( ) 함수 사용 이유는
// jQuery 코드가 "문서가 준비되기 전에 실행이 먼저 되는 것을 막기 위한 것"입니다.
// 하나의 페이지에서는 ready( ) 를 한 번만 사용하는 것이 좋습니다.
jQuery(document).ready(function(){

  $('.navi>li').mouseover(function(){        
	  $(this).find('.submenu').stop().slideDown(500);
  }).mouseout(function(){
	  $(this).find('.submenu').stop().slideUp(500);
  });


});

===================================================================

[16단계] JAVASCRIPT 파일을 index.html 파일에 연결해 줌 : index.html 파일에 다음의 소스 내용을 추가해줌

<script src="javascript/jquery-1.12.3.js"></script>
<!-- defer 속성은 script가 잠깐 지연 되도록 하여 HTML 구문 분석이 완료된 후 스크립트를 실행하도록 함 -->
<script src="javascript/script.js" defer type="text/javascript"></script>

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_1.jpg

===================================================================

[17단계]  index.html 파일에 슬라이드 이미지 추가하기 : 슬라이드 이미지 추가를 위해 index.html 파일에서

<div class="imgslide"> 이미지 슬라이드 자리 </div> 부분을 찾아서, "이미지 슬라이드 자리" 텍스트를 지우고,

다음의 소스를 추가해 줍니다.

<div class="imgslide">
  <a href="#">
     <img src="images/img1.jpg" alt="이미지1">     
     <span class="imgtext">대한천문대 홈페이지 새단장</span>
  </a>
  
  <a href="#">
     <img src="images/img2.jpg" alt="이미지2">     
     <span class="imgtext">이달의 별자리 특강</span>                     
  </a>
  
  <a href="#">
     <img src="images/img3.jpg" alt="이미지3">     
     <span class="imgtext">별사진 공모전 개최</span>
  </a>
</div>

===================================================================

[18단계] 슬라이드 이미지에 스타일 추가하기 : 슬라이드 이미지 영역을 위한 스트일 지정을 위해

style.css 파일에서 메인 이미지 영역의 스타일 지정 부분인 클래스 선택자 .imgslide를 찾아서

다음과 같이 소스 코딩해 줍니다.

.imgslide{
	height:300px; /*이미지 슬라이드 높이*/
	width:1200px; /*이미지 슬라이드 너비*/
	position:relative; /*이미지 슬라이드 영역 제한*/
	overflow:hidden;   /*영역 밖으로 보이지 않도록 제한*/
}

.imgslide>a{
    display:block; 
    position:absolute; 
}

.imgtext{
    height:50px;
    width:500px;
    position:absolute;
    margin: -30px 0 0 -250px;
    text-align:center;
    color:#ffffff;
    font-weight:bold;
    line-height:50px;
    background-color:rgba(40,40,40,0.5);
    left:50%;
    top:50%;  
}

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_2.jpg

===================================================================

[19단계] Fade-in, Fade-out 구현하기 : 이미지에 페이드인, 페이드아웃 기능을 구현하기 위해 script.js 파일에 다음의 소스 코드를 추가해 줍니다.
           이때, document 객체의 ready() 함수의 마지막 줄인 document 객체의 ready 함수의 종결 부분인 }); 안쪽에 입력하도록 합니다.

jQuery(document).ready(function(){

    $('.navi>li').mouseover(function(){        
        $(this).find('.submenu').stop().slideDown(500);
    }).mouseout(function(){
        $(this).find('.submenu').stop().slideUp(500);
    });

// 아래에 다음과 같이 소스 코드를 추가해 줌

  $('.imgslide a:gt(0)').hide();
  setInterval(function(){
	$('.imgslide a:first-child').fadeOut()
	   .next('a').fadeIn()
	   .end().appendTo('.imgslide');},3000);

// document 객체의 ready() 함수의 마지막 줄인 document 객체의 ready 함수의 종결 부분인 }); 안쪽에 입력하도록 함
});

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_3.jpg

===================================================================

[20단계] 세부 영역별 ⓒ Contents 영역에 들어갈 공지사항의 타이틀 이름을 지정하기 위해
           <ul class="tabmenu"> 아래의 <li>태그를 찾고, 아래의 소스 코드 처럼 수정해 줍니다.
           즉, class="active"를 지정하여 활성화 되는 탭 타이틀의 스타일을 지정하고
           자바스크립트에서 활성화시킬 탭 요소를 구분하는데 사용합니다.

<div class="contents">
  <ul class="tabmenu"> <!-- tabmenu:공지사항과 갤러리 묶어줌 -->

    <!--  <li>태그를 찾고, 아래의 소스 코드 처럼 수정해 줌  -->
    <!-- 공지사항의 타이틀 이름을 지정하기 위해 <ul class="tabmenu"> 아래의
          <li>태그를 찾고, 아래의 소스 코드 처럼 수정해 줌.
          즉, class="active"를 지정하여 활성화 되는 탭 타이틀의 스타일을 지정하고
          자바스크립트에서 활성화시킬 탭 요소를 구분하는데 사용함. -->  
     <li class="active"><a href="#">공지사항</a>
        <div class="notice">

===================================================================

[21단계] 다음으로 갤러리 탭 타이틀을 지정하기 위해 <div class="gallery">  바로 위의 <li> 태그를 찾고,
           다음과 같이 <li> 태그 옆에 <a href="#">갤러리</a> 소스 코드를 추가해 줍니다.

<!-- 갤러리 탭 타이틀을 지정하기 위해 <div class="gallery">  바로 위의 <li> 태그를 찾고,
      다음과 같이 <li> 태그 옆에 <a href="#">갤러리</a> 소스 코드를 추가해 줍니다. -->
   <li><a href="#">갤러리</a>
	<div class="gallery">
	</div>
   </li>

===================================================================

[22단계] 다음으로 공지사항, 갤러리 스타일 추가하기 : 와이어프레임을 보면,
           공지사항과 갤러리 타이틀 부분이 나란히 붙어있는 탭 메뉴로 지정되어 있습니다.
           ["구성조건_2) 대한천문대_공지사항_갤러리_탭으로_구성도.jpg" 이미지 참고]
           그리고, 활성화된 탭 타이틀은 밝은 색, 활성화되지 않은 타이틀은
           어두운 색으로 표시되어 탭 타이틀의 활성화 여부에 따라 색상이 구분되어 나타나고 있습니다.
           이렇게 스타일을 지정하기 위해, style.css 파일에서 클래스 선택자 .tabmenu 를 찾아서
           다음과 같이 소스를 수정 코딩해 줍니다.

[수정 전 .tabmenu 소스 코드]

.tabmenu{         /*공지사항과 갤러리 탭메뉴가 들어가는 곳*/
	float:left;
	height:200px;
	width:400px;
}

[수정 후 .tabmenu 소스 코드]

.tabmenu{         /*공지사항과 갤러리 탭메뉴가 들어가는 곳*/
	float:left;
	height:180px;
	width:395px;
	margin-top:10px;
	margin-bottom:10px;
}

===================================================================

[23단계] 다음으로 탭 영역 타이틀 부분의 스타일을 지정하기 위해
           .tabmenu 스타일 아래에 다음의 소스를 추가 코딩해 줍니다.

.tabmenu{         /*공지사항과 러리 탭메뉴가 들어가는 곳*/
	float:left;
	height:180px;
	width:395px;
	margin-top:10px;
	margin-bottom:10px;
}

/* .tabmenu 스타일 아래에 다음의 소스를 추가 코딩해 줌 */ 

.tabmenu>li{      /*탭 타이틀 영역 스타일*/
	float:left;
	width:100px;
	line-height:30px;
}

.tabmenu>li>a{    /*탭 타이틀 영역 <a> 요소 스타일*/
	display:block; 
	font-size:16px;
	text-align:center; 
	background-color:#cccccc; 
	border:1px solid #dddddd;
	border-bottom:none;
}

.tabmenu>li>a:hover{ /*<a> 요소에 마우스를 올릴 때 스타일*/ 
  	background-color:#eeeeee;
}

.tabmenu>li:first-child a{ /*탭 타이틀 첫 번째 요소의 <a> 요소 스타일*/ 
	border-right:none;
}

.tabmenu>li.active>a{ /*active 클래스가 추가된 <a> 요소 스타일*/ 
  	background-color:#ffffff; 
}


===================================================================

[24단계] 그리고, 세부 영역별 ⓒ Contents 영역에 들어갈 공지사항, 갤러리, 배너, 바로가기 콘텐츠를 제작합니다.

주의할 점은, 공지사항과 갤러리는 탭 기능을 이용하여 제작하고, 각 탭을 클릭(click)하면 해당 탭에 대한 내용이 보이도록 해야 합니다.

index.html 파일에서 <div class="notice"> 공지사항 자리 </div>를 찾아서, "공지사항 자리" 텍스트를 지우고, 다음의 소스 코드를 추가해 줍니다.

	<div class="notice">
	      <ul>
	        <li><a href="#">하늘과 바람과 별과 詩 사생대회
	        <span>2021.03.14</span></a></li>
	        <li><a href="#">하계기간 야간 연장운영 합니다.
	        <span>2021.03.14</span></a></li>
	        <li><a href="#">청소년 대상 천문교실 안내
	        <span>2021.03.14</span></a></li>
	        <li><a href="#">제1회 별사진 공모전 개회됩니다.
	        <span>2021.03.14</span></a></li>
	      </ul>
	</div>

===================================================================

[25단계] 다음으로 공지사항 콘텐츠 영역의 스타일을 추가하기 위해
           style.css 파일에 다음의 소스를 추가해 줍니다.
           앞서 .tabmenu 아래에 다음의 소스 코드를 추가해 줍니다.

.tabmenu>li.active>a{ /*active 클래스가 추가된 <a> 요소 스타일*/ 
  	background-color:#ffffff; 
}

/* 앞서 .tabmenu 아래에 다음의 소스 코드를 추가해 줌 */

.tabmenu>li div{        /*탭 콘텐츠 영역 스타일*/
	position:absolute;
	left:0px;
	height:0px;
	overflow:hidden;
}

.tabmenu>li.active div{ /*active 클래스가 추가된 탭 콘텐츠 영역 스타일*/
	width:393px; 
	height:148px; 
	border:1px solid #dddddd;
	z-index:1;
}

.notice ul{  /*공지사항 콘텐츠 영역 스타일*/
	float:left;
	width:393px; 
	margin-top:12px;
	margin-bottom:12px;
}

.notice li{  /*공지사항 리스트 영역 스타일*/
	height:32px;
	line-height:32px;
	font-size:15px;
	margin-left:10px;
	margin-right:10px;
}

.notice li:nth-child(2n){ /*공지사항 중 2배수 리스트 스타일*/
	background-color:#cccccc;
}

.notice li span{   /*<span>요소로 구성한 날짜 영역 스타일*/
	float:right;
}

.notice li:hover{  /*공지사항 리스트 영역에 마우스를 올릴 때 스타일*/
	font-weight:bold;
}

===================================================================

[26단계] 공지사항과 갤러리 탭 영역인 <ul class = "tabmenu">의 상위 컨테이너인 <div class = "contents">의 위치가 절대 좌표값을 갖도록
            클래스 선택자 .contents 스타일을 찾아서 다음과 같이 position:absolute 속성을 추가해 줍니다.

[수정 전 .contents]

.contents{        /*tabmenu와 otherwrap 묶어줌*/
	float:left; 
	height:200px; /*콘텐츠들(탭메뉴,배너,바로가기) 높이*/
	width:1200px; /*콘텐츠들(탭메뉴,배너,바로가기) 너비*/
}

[수정 후 .contents]

.contents{        /*tabmenu와 otherwrap 묶어줌*/
	float:left; 
	height:200px; /*콘텐츠들(탭메뉴,배너,바로가기) 높이*/
	width:1200px; /*콘텐츠들(탭메뉴,배너,바로가기) 너비*/
	position:absolute;
}

===================================================================

[27단계] 그리고, <div class="gallery"> 갤러리 자리 </div> 영역에 "갤러리 자리" 텍스트를 지워주고,
           다음의 소스 코드를 추가하여 갤러리 부분에 이미지를 추가합니다.

    <div class="gallery">
    	<ul>
	      <li><a href="#"><img src="images/icon1.jpg" alt="갤러리1"></a></li>
	      <li><a href="#"><img src="images/icon2.jpg" alt="갤러리2"></a></li>
	      <li><a href="#"><img src="images/icon3.jpg" alt="갤러리3"></a></li>
	</ul>
    </div>


===================================================================

[28단계] 갤러리 영역의 스타일을 추가하기 위해 .notice li:hover 영역 아래에 다음의 소스 코드를 추가해 줍니다.
           이때, 갤러리의 이미지에 마우스 오버(mouse over) 시 투명도(Opacity) 변화가 적용 되도록 스타일을 지정합니다.
           style.css 파일에서 클래스 선택자 .notice li:hover 영역 아래에 다음의 소스를 추가해 줍니다.

.notice li:hover{  /*공지사항 리스트 영역에 마우스를 올릴 때 스타일*/
	font-weight:bold;
}

/* 앞서 .notice li:hover 영역 아래에 다음의 소스 코드를 추가해 줌 */

.gallery li{  /*갤러리 콘텐츠 영역 스타일*/
	float:left;
	margin-top:15px;
	margin-left:5px;
}

.gallery img{ /*갤러리 콘텐츠 이미지 영역 스타일*/
	height:100px;
	width:100px;
	padding:10px;
}

.gallery li:hover{ /*갤러리 콘텐츠에 마우스를 올릴 때 스타일*/
	opacity:0.5;
}

===================================================================
[28단계_보강] : 공지사항을 잠깐 보이지 않게 하고, 갤러리 확인하기!
                   다음과 같이 overflow: hidden; 주석 처리하고,
                   .notice에 display:none; 적용시켜 줍니다.
                  그리고, "2_4_갤러리_이미지만_확인.jpg" 이미지와 같은 실행 결과를 확인해 봅니다.

	    /* overflow: hidden; */

	    .notice{
 	    display: none;
	    }


/* 탭 콘텐츠 영역 스타일 */
.tabmenu>li div{
    /* position: absolute은 탭 콘텐츠 영역의 위치는 상위 컨테이너를
    기준으로 절대 좌표값을 가지도록 함. 공지사항과 갤러리 탭 콘텐츠
    영역이 모두 같은 자리에 나타나야 하므로 이 속성을 지정해 줌.
    이 속성을 사용하지 않으면 갤러리 탭 콘텐츠 영역의 시작 위치가
    변경됨 */   
    position: absolute;
    /* 탭 콘텐츠 영역을 left로부터 0px 설정함. 즉, 여백을 두지 않고,
       콘텐츠 영역이 왼쪽에 붙어서 나타나게 함 */
    left: 0px;
    /* 탭 콘텐츠 영역의 높이는 0으로 지정하여 보이지 않도록 함.
       즉, 활성화 될 때만 높이를 지정하여 콘텐츠가 보이도록 함 */
    height: 0px;
    /* overflow: hidden; 다른 영역과 겹쳐 보이는 부분을 가림.
       이 옵션을 사용하지 않을 경우 탭 콘텐츠 영역이 서로 겹쳐서 보이게 됨 */
    /* 갤러리 콘텐츠 영역이 보이도록 overflow: hidden; 주석 처리함.
       그래야, 갤러리 이미지 스타일 적용 사항을 확인할 수 있음 */
   /* 갤러리 이미지 스타일 적용 확인 후에는 아래 소스를 주석 해제해 줌 */
      /* overflow: hidden; */
}

/* 공지사항의 콘텐츠 영역이 보이지 않도록 display:none; 처리함.
   그래서, 갤러리 이미지 스타일 적용 사항을 확인할 수 있음 */
/* 갤러리 이미지 스타일 적용 확인 후에는 아래 .notice 주석 처리해 줌 */
.notice{
    display: none;
}

===================================================================

[28단계_보강] 확인 후 overflow: hidden; 주석 처리 해제하고,
.notice 주석 처리한 후에 실행 결과를 확인합니다. 다음의 2_4.jpg 참고 바랍니다.

[실행 결과 확인] Chrome 실행 확인 : 2_4.jpg

===================================================================

[29단계] 공지사항, 갤러리 탭 전환 기능 구현하기 : 이번에는 공지사항과 갤러리 탭이 전환되도록

           자바스크립트와 jQuery를 활용하여 동적 기능을 만들어 줍니다. 공지사항 탭과 갤러리 탭이

           전환되는 기능을 구현하기 위해 script.js 파일에 다음의 소스 코드를 추가해 줍니다.

           이때, document 객체의 ready() 함수의 마지막 줄인 document 객체의

           ready 함수의 종결 부분인 }); 안쪽에 입력하도록 합니다.

jQuery(document).ready(function(){

    $('.navi>li').mouseover(function(){        
        $(this).find('.submenu').stop().slideDown(500);
    }).mouseout(function(){
        $(this).find('.submenu').stop().slideUp(500);
    });

  $('.imgslide a:gt(0)').hide();
  setInterval(function(){
	$('.imgslide a:first-child').fadeOut()
	   .next('a').fadeIn()
	   .end().appendTo('.imgslide');},3000);

// 아래에 다음과 같이 소스 코드를 추가해 줌

    $(function(){
      $('.tabmenu>li>a').click(function(){
        $(this).parent().addClass("active").siblings().removeClass("active");
            return false;
      });
    });

// document 객체의 ready() 함수의 마지막 줄인 document 객체의 ready 함수의 종결 부분인 }); 안쪽에 입력하도록 함
});

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_5.jpg

===================================================================

[30단계] 배너, 바로 가기 입력하고 스타일 지정하기 : index.html 파일에서
           <div class="banner"> 배너 자리 </div>와 <div class="shortcut">바로가기 자리</div>를 찾아서,
           "배너 자리" 텍스트와 "바로가기 자리" 텍스트를 삭제하고, 다음의 소스를 코딩해 줍니다.

  <div class="otherwrap"> <!-- otherwrap:banner와 shortcut 묶어줌 -->
    <div class="banner">
      <a href="#">
      <img src="images/banner.jpg" alt="배너">
      <h4 class="bntext">배너</h4>      
      </a> 
    </div>    
    <div class="shortcut">
      <a href="#">
      <img src="images/shortcut.jpg" alt="바로가기">     
      <h4 class="sctext">바로가기</h4>                     
      </a>
    </div>
  </div> <!-- otherwrap 끝 -->

===================================================================

[31단계] style.css 파일에서 배너 영역의 스타일을 추가하기 위해 클래스 선택자 .banner를 찾습니다.
           앞서 입력해둔 스타일에서 아래와 같이 높이 height:200px을 height:180px로 수정하고,
           새로운 속성도 추가해 줍니다.

[수정 전 .banner]

.banner{
	float:left;
	height:200px;  /*배너 영역 높이*/
	width:400px;   /*배너 영역 너비*/
}

[수정 후 .banner]

.banner{
	float:left;
	height:180px;  /*배너 영역 높이*/
	width:395px;   /*배너 영역 너비*/
	margin-top:10px;
	margin-bottom:10px;
}

===================================================================

[32단계] 계속해서 배너 영역에 들어가는 이미지와 글자 영역의 스타일을 추가 코딩해 줍니다.

           style.css 파일에서 클래스 선택자 .banner 아래에 다음과 같이 코딩해 줍니다.

.banner{
	float:left;
	height:180px;  /*배너 영역 높이*/
	width:395px;   /*배너 영역 너비*/
            margin-top:10px;
            margin-bottom:10px;
}

/* 앞서 .banner 아래에 다음의 소스를 코딩해 줌 */

.banner img{       /*배너 이미지 스타일*/
	float:left;
	height:180px;
	width:395px;
}
.bntext{           /*배너 글자 스타일*/
	float:left;
	height:40px;
	width:300px;
	position:absolute;
	text-align:center;
	color:#ffffff;
	font-weight:bold;
	line-height:40px;
	background-color:rgba(40,40,40,0.3);
	left:450px;
	top:80px;
}

.banner img:hover{ /*배너 이미지에 마우스를 올릴 때 스타일*/
	opacity:0.5;
}

===================================================================

[33단계] 다음으로 바로가기 영역의 스타일을 추가해 줍니다.

           style.css 파일에서 클래스 선택자 .shortcut 을 찾아서 다음과 같이 높이를 수정하고 여백도 추가해 줍니다.

[수정 전 .shortcut]

.shortcut{
	float:right;
	height:200px; /*바로가기 영역 높이*/ 
	width:400px;  /*바로가기 영역 너비*/  
}


[수정 후 .shortcut]

.shortcut{
	float:right;
	height:180px; /*바로가기 영역 높이*/ 
	width:400px;  /*바로가기 영역 너비*/  
	margin-top:10px;
	margin-bottom:10px;
}

===================================================================

[34단계] 바로가기 이미지와 글자 영역의 스타일도 다음과 같이 소스 코드 추가해 줍니다.

/*바로가기 이미지 스타일*/
.shortcut img{     
	float:right;
	height:180px;
	width:400px;
}

/*바로가기 글자 스타일*/
.sctext{           
	float:right;
	height:40px;
	width:300px;
	position:absolute;
	text-align:center;
	color:#ffffff;
	font-weight:bold;
	line-height:40px;
	background-color:rgba(40,40,40,0.3);
	left:850px;
	top:80px;
}

/*바로가기 글자에 마우스를 올릴 때 스타일*/
.shortcut img:hover{    
	opacity:0.5;
}

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_6.jpg

===================================================================

[35단계] 레이어 팝업창 제작하고 배경 스타일 지정하기 : 레이어 팝업창을 구현 합니다.
           공지사항의 첫 번째 콘텐츠를 클릭(click)할 경우, 레이어 팝업창(Layer Pop_up)이 나타나며
           "닫기" 버튼을 누르면 해당 팝업창이 닫히도록 구현합니다.
           ["구성조건_3) 대한천문대_레이어팝업창_구성도.jpg" 이미지 참고 바람]

           먼저, index.html 파일에 레이터 팝업창에 들어가는 콘첸츠 부분을 작성해 줍니다.
           index.html 파일에서 <div class="bodywrap"> 영역을 종료하는 </div> 태그 다음에
           다음과 같이 소스 코딩을 해줍니다.

  </div> <!-- otherwrap 끝 -->
</div> <!-- contents 끝 -->
</div> <!-- bodywrap 끝 -->

<!-- 앞서 bodywrap 끝 다음에 아래와 같이 소스 코딩해 줌 -->

<!-- 레이어 팝업창 영역 -->
<div id="layer"> 
  <div class="layer_up">
    <div class="uptitle">하늘과 바람과 별과 詩 사생대회</div>
    <div class="upbody">
    윤동주 시인의 시집 &lt;하늘과 바람과 별과 詩&gt; 출간
    72주년을 맞이하여 천문대에서 개최하는 사생대회가 열립니다.
    별 하나에 추억, 사랑, 쓸쓸함, 동경 그리고 시와, 어머니를 그렸던 
    시인처럼 별같은 마음을 가진 분들은 참여해주세요.
    </div>
    <div class="btn">닫기</div>
  </div>
</div> <!-- 레이어 팝업창 영역 끝 -->

===================================================================

[36단계] 레이어 팝업창의 스타일을 지정하기 위해서 style.css 파일에서 .shortcut img:hover 을 찾아서,
            그 아래에 다음과 같이 소스 코딩해 줍니다.

.shortcut img:hover{    /*바로가기 글자에 마우스를 올릴 때 스타일*/
	opacity:0.5;
}

/* .shortcut img:hover 아래에 다음과 같이 소스 코딩해 줌 */

#layer{      /*레이어 팝업창 배경 스타일*/
	width:100%;
	height:100%;
	position:absolute;
	left:0px;
	top:0px;
	background:rgba(0,0,0, 0.6); 
	z-index:1; 
	display:none;
}
#layer.active{
	display:block;
}

===================================================================

[37단계] 레이어 팝업 기능 구현하기 : 레이어 팝업창 모양은 팝업 되는 영역의 스타일을 보면서 지정하기 위해서
           먼저 팝업 기능부터 구현 합니다. 공지사항의 첫 번째 콘텐츠를 클릭할 경우, 레이어 팝업창이 나타나야
           하므로, 공지사항 클래스 선택자 .notice를 사용하여 지정해 줍니다.
           script.js 파일에 다음과 같이 입력하여 팝업 기능을 추가해 줍니다.
           이때, 마지막 줄인 document 객체의 ready 함수의 종결 부분인 }); 안쪽에 입력하도록 합니다.

jQuery(document).ready(function(){

  $('.navi>li').mouseover(function(){        
	  $(this).find('.submenu').stop().slideDown(500);
  }).mouseout(function(){
	  $(this).find('.submenu').stop().slideUp(500);
  });
  
  $('.imgslide a:gt(0)').hide();
  setInterval(function(){
	$('.imgslide a:first-child').fadeOut()
	   .next('a').fadeIn()
	   .end().appendTo('.imgslide');},3000);

  $(function(){
   $('.tabmenu>li>a').click(function(){
	$(this).parent().addClass("active").siblings().removeClass("active");
		return false;
	  });
  });

// 레이어 팝업창 구현을 위해 다음과 같이 소스 코딩해 줌


// 공지사항 클래스 선택자 .notice를 사용하여 지정해 줍니다.
  $(".notice li:first").click(function(){   
	$("#layer").addClass("active");
  });

  $(".btn").click(function(){
	$("#layer").removeClass("active");
  });    
	     
});

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_7.jpg

* 2_7.jpg 실행 결과 체크 사항 : 앞서 index.html 파일 저장 후 Chrome 브라우저에서 실행을 하고,

   화면 중앙의 "공지사항" 밑에 "제1회 별사진 공모전 개회됩니다.     2021.03.14" 부분을 마우스 클릭(click)해 보면,

   즉, index.html 파일의 클래스 선택자 .notice 요소인 <div class="notice">로 지정된 공지사항의 첫 번째 줄을 클릭해 보면,

   바탕에 불투명도가 낮아지면서 화면이 변하는 것을 확인할 수 있습니다.

===================================================================

[38단계] 레이어 팝업창 스타일 지정하기 : 앞서 #layer.active 스타일 코딩 부분의 아래에 다음의 소스를 추가 코딩해 줍니다.

#layer.active{
	display:block;
}

/* #layer.active 스타일 코딩 부분의 아래에 다음의 소스 코딩을 해 줌 */

.layer_up{   /*레이어 팝업창 스타일*/
	width:500px;
	height:400px;
	position:fixed;
	left:40%; 
	top:20%; 
	background-color:#ffffff;
}

.uptitle{
	margin-top:30px;
	text-align:center; 
	line-height:16px; 
	font-size:20px; 
	font-weight:bold;
}
.upbody{
	padding:30px;
	text-align:center;
	font-size:16px;
	line-height:30px; 
}
.btn{
	height:20px;
	width:80px; 
	cursor:pointer;
	display:block;
	text-align:center;
	font-size:15px;
	font-weight:bold;
	background:#cccccc;
         /* border-radius:3px; 테두리를 둥글게 만들어 모서리가 둥근 버튼으로 지정함.
            큰 값일수록 원형에 가까워짐 */
	border-radius:3px;
	position:absolute; 
	right:10px;
	bottom:10px;
}

===================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_8.jpg

* 2_8.jpg 실행 확인 체크 사항 : 레이어 파업창이 잘 나타나고 "닫기" 버튼을 클릭하면 정상적으로 사라지는지 결과를 확인합니다.

===================================================================

[39단계] Footer 영역 제작하기 : 하단 로고, 하단 메뉴, Copyright를 제작합니다.

index.html 파일에서 <footer> </footer> 영역에서 "하단 로고 자리", "하단 메뉴 자리", "Copyright 자리" 텍스트를 모두 지워주고,

다음의 소스 코드를 추가해 줍니다.

<footer>
  <div class="btlogo">
  <a href="#"><img src="images/logo_bottom.png" alt="하단로고"></a>
  </div>
  <div class="site"> <!-- site:btmenu와 copy 묶어줌 -->
    <div class="btmenu">
    <ul>
      <li><a href="#">하단메뉴1</a></li>
      <li><a href="#">하단메뉴2</a></li>
      <li><a href="#">하단메뉴3</a></li>
    </ul>
    </div>
    <div class="copy">
    COPYRIGHT © by WEBDESIGN. ALL RIGHTS RESERVED
    </div>               
  </div> <!-- site 끝 -->
</footer>

===================================================================

[40단계] Footer 영역 스타일 지정하기 : style.css 파일에서 클래스 선택자 .btlogo 영역을 찾아서 다음과 같이 소수 추가 코딩을 해줍니다.

.btlogo{         
	float:left;
	height:100px; /*로고 영역 높이*/
	width:250px;  /*로고 영역 너비*/
}

/* 앞서 .btlogo 아래에 다음의 소스를 코딩해 줌 */

.btlogo img{      /*로고 이미지 스타일*/
	float:left;
	height:42px;
	width:180px;
	margin-top:30px;
	margin-left:25px;
}


===================================================================

[41단계] 마지막으로 style.css파일의 Footer 영역에서 하단 메뉴와 Copyright 영역의 스타일을 지정합니다.
           앞서 입력해 두었던 클래스 선택자 .btmenu와 .copy 영역을 찾은 후
           다음과 같이 스타일 속성을 추가해 줍니다.
           아울러, 하단 메뉴 리스트에 대한 스타일도 추가해 줍니다.

.btmenu{
	height:50px;  /*하단 메뉴 높이*/
	width:600px;  /*하단 메뉴 너비*/
	text-align:center;   /* 스타일 속성 추가 */
    	font-size:18px;      /* 스타일 속성 추가 */
	line-height:30px;   /* 스타일 속성 추가 */
}

.btmenu li{
    margin-top:10px;
    display:inline-block;
    width:100px;
}

.btmenu li:hover{
    font-weight:bold;
}

.copy{
	height:50px;  /*Copyright 높이*/
	width:600px;  /*Copyright 너비*/
	text-align:center;   /* 스타일 속성 추가 */
	font-size:16px;      /* 스타일 속성 추가 */
	line-height:50px;   /* 스타일 속성 추가 */
}

==============================================================================

[실행 결과 확인] Chrome 실행 확인 : 2_9.jpg

==============================================================================

[42단계] 최종 검토하기 : 웹페이지 코딩은 HTML5 웹표준을 준수해야 합니다.

1) HTML 유효성검사를 수행합니다.

2) CSS 유효성검사를 수행합니다.

3) 매우 드문 일이지만, 간록 최종 파일이 익스플로러에서 제대로 실행되지 않는 경우가 있습니다.

   이것은 스크립트 부분이 익스플로러에서 제대로 실행되지 않아서 발생할 수 있는 문제입니다.

   이런 경우에는 최종 index.html 파일내의 <head>와 </head>사이에 다음 소스를 추가해 줍니다.

      <!-- saved from url=(0013)about:internet -->

   이런 현상은 주로 로컬 사용자 PC에서 익스플로러를 사용하여 HTML 문서를 실행시킬 경우 발생합니다.

   HTML 문서에 스크립트가 포함되어 있으나 익스플로러 옵션에서 스크립트 실행을 중지시켜 놓은 상태이거나,

   낮은 버전의 jQuery 문서를 연동시킨 경우, 또는 웹이 아닌 로컬에서 실행됨으로써 HTML 실행 조건에 문제가

   있어서 발생하게 됩니다. 따라서, 위의 소스를 추가해 주어, 로컬에서 실행되는 파일을 웹에서 동작하는 것처럼

   지정해주면 스크립트가 정상적으로 실행될 수 있습니다. 드물게 발생할 수 있는 문제이기에 참고만하시기 바랍니다.

==============================================================================

